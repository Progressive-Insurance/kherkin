name: Build and Test

on:
  push:
    branches: ["main"]
    tags:
      - '*'
  pull_request:
    branches: ["main"]

env:
  ANDROID_USER_HOME: /home/runner/.android
  ANDROID_EMULATOR_HOME: /home/runner/.android
  ANDROID_AVD_HOME: /home/runner/.android/avd

jobs:
  run_tests:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Unit Tests
        run: ./gradlew common:testDebug
      - name: Download emu image and platform tools
        run: echo "yes" | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools"
      - name: Setup emu
        run: ./gradlew sampleapp:pixel5api34Setup
      - name: Run UI Tests
        run: ./gradlew sampleapp:pixel5api34DebugAndroidTest -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect

  publish_release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [run_tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Build
        run: ./gradlew publish
      - name: Deploy
        run: |
          if [ ${{ github.ref }} =~ 'refs/tags' ]; then
            ./gradlew jreleaserFullRelease
          else
            ./gradlew jreleaserDeploy
          fi
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}